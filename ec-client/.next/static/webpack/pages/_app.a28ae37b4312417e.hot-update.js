"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client */ \"(pages-dir-browser)/./node_modules/@apollo/client/index.js\");\n/* harmony import */ var _graphql_mutations_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/graphql/mutations/auth */ \"(pages-dir-browser)/./src/graphql/mutations/auth.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n// Mock users for development\nconst MOCK_USERS = [\n    {\n        id: 'user-1',\n        email: 'user@example.com',\n        password: 'password123',\n        firstName: 'John',\n        lastName: 'Doe',\n        role: 'CUSTOMER'\n    },\n    {\n        id: 'user-2',\n        email: 'admin@example.com',\n        password: 'admin123',\n        firstName: 'Admin',\n        lastName: 'User',\n        role: 'ADMIN'\n    }\n];\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    token: null,\n    isAuthenticated: false,\n    isLoading: true,\n    login: async ()=>{},\n    register: async ()=>{},\n    logout: ()=>{},\n    updateUser: async ()=>{},\n    error: null,\n    clearError: ()=>{}\n});\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    // Set initial mock user for easier testing\n    const initialUser = {\n        id: 'user-1',\n        email: 'user@example.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        role: 'CUSTOMER',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialUser);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('mock-token-123');\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [loginMutation] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation)(_graphql_mutations_auth__WEBPACK_IMPORTED_MODULE_2__.LOGIN);\n    const [registerMutation] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation)(_graphql_mutations_auth__WEBPACK_IMPORTED_MODULE_2__.REGISTER);\n    const [updateUserMutation] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation)(_graphql_mutations_auth__WEBPACK_IMPORTED_MODULE_2__.UPDATE_USER);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Store the mock user in localStorage for persistence\n            localStorage.setItem('token', 'mock-token-123');\n            localStorage.setItem('user', JSON.stringify(initialUser));\n            // Check if we have a token in localStorage\n            const storedToken = localStorage.getItem('token');\n            const storedUser = localStorage.getItem('user');\n            if (storedToken && storedUser) {\n                try {\n                    setToken(storedToken);\n                    setUser(JSON.parse(storedUser));\n                    setIsAuthenticated(true);\n                } catch (err) {\n                    // Invalid stored user data\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('user');\n                }\n            }\n            setIsLoading(false);\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    const clearError = ()=>{\n        setError(null);\n    };\n    const login = async (input)=>{\n        try {\n            setError(null);\n            setIsLoading(true);\n            if (true) {\n                // For development, use mock authentication\n                const mockUser = MOCK_USERS.find((user)=>user.email === input.email && user.password === input.password);\n                if (!mockUser) {\n                    throw new Error('Invalid email or password');\n                }\n                // Create a copy without the password\n                const { password, ...userWithoutPassword } = mockUser;\n                // Set user and token\n                setUser(userWithoutPassword);\n                setToken('mock-token-123');\n                setIsAuthenticated(true);\n                // Store in localStorage\n                localStorage.setItem('token', 'mock-token-123');\n                localStorage.setItem('user', JSON.stringify(userWithoutPassword));\n                // Simulate API delay\n                await new Promise((resolve)=>setTimeout(resolve, 500));\n            } else {}\n        } catch (err) {\n            setError(err.message || 'Login failed');\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const register = async (input)=>{\n        try {\n            setError(null);\n            setIsLoading(true);\n            if (true) {\n                // For development, mock registration\n                // Check if email is already in use\n                if (MOCK_USERS.some((user)=>user.email === input.email)) {\n                    throw new Error('Email is already in use');\n                }\n                // Create new mock user\n                const newUser = {\n                    id: \"user-\".concat(Date.now()),\n                    email: input.email,\n                    firstName: input.firstName,\n                    lastName: input.lastName,\n                    role: 'CUSTOMER'\n                };\n                // Set user and token\n                setUser(newUser);\n                setToken('mock-token-123');\n                setIsAuthenticated(true);\n                // Store in localStorage\n                localStorage.setItem('token', 'mock-token-123');\n                localStorage.setItem('user', JSON.stringify(newUser));\n                // Simulate API delay\n                await new Promise((resolve)=>setTimeout(resolve, 500));\n            } else {}\n        } catch (err) {\n            setError(err.message || 'Registration failed');\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const updateUser = async (input)=>{\n        try {\n            setError(null);\n            setIsLoading(true);\n            if (true) {\n                // For development, mock user update\n                if (user) {\n                    const updatedUser = {\n                        ...user,\n                        firstName: input.firstName || user.firstName,\n                        lastName: input.lastName || user.lastName,\n                        email: input.email || user.email\n                    };\n                    // Update user in state and localStorage\n                    setUser(updatedUser);\n                    localStorage.setItem('user', JSON.stringify(updatedUser));\n                }\n                // Simulate API delay\n                await new Promise((resolve)=>setTimeout(resolve, 500));\n            } else {}\n        } catch (err) {\n            setError(err.message || 'Failed to update user');\n            throw err;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const logout = ()=>{\n        setToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n        // Remove from localStorage\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            token,\n            isAuthenticated,\n            isLoading,\n            login,\n            register,\n            logout,\n            error\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/koheimori/Downloads/messy_projects-20250310/playground-claude-dev/ec-app/ec-client/src/contexts/AuthContext.tsx\",\n        lineNumber: 261,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(AuthProvider, \"3kW3ioyxSVEogkhXj5rgfINJhCU=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation,\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation,\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation\n    ];\n});\n_c = AuthProvider;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthContext);\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});