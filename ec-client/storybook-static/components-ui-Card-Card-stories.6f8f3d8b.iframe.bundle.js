"use strict";(self.webpackChunkec_client=self.webpackChunkec_client||[]).push([[608],{"./src/components/ui/Card/Card.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Clickable:()=>Clickable,Default:()=>Default,HighElevation:()=>HighElevation,MediumElevation:()=>MediumElevation,NoPadding:()=>NoPadding,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Card_stories});var _templateObject,taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),getShadow=function getShadow(elevation,theme){switch(elevation){case"low":default:return theme.shadows.sm;case"medium":return theme.shadows.md;case"high":return theme.shadows.lg}},StyledCard=styled_components_browser_esm.Ay.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n  background-color: ",";\n  border-radius: ",";\n  box-shadow: ",";\n  padding: ",";\n  transition: ",";\n  cursor: ",";\n\n  &:hover {\n    box-shadow: ",";\n  }\n"])),(function(_ref){return _ref.theme.colors.light}),(function(_ref2){return _ref2.theme.borderRadius.md}),(function(_ref3){var elevation=_ref3.elevation,theme=_ref3.theme;return getShadow(elevation,theme)}),(function(_ref4){var padding=_ref4.padding,theme=_ref4.theme;return padding?theme.spacing.lg:0}),(function(_ref5){return _ref5.theme.transitions.default}),(function(_ref6){return _ref6.onClick?"pointer":"default"}),(function(_ref7){var onClick=_ref7.onClick,elevation=_ref7.elevation,theme=_ref7.theme;return getShadow(onClick?"high"===elevation?"high":"medium":elevation,theme)})),Card=function Card(_ref8){var children=_ref8.children,_ref8$elevation=_ref8.elevation,elevation=void 0===_ref8$elevation?"low":_ref8$elevation,_ref8$padding=_ref8.padding,padding=void 0===_ref8$padding||_ref8$padding,onClick=_ref8.onClick,className=_ref8.className;return react.createElement(StyledCard,{elevation,padding,onClick,className},children)};const Card_Card=Card;var Card_stories_templateObject,_templateObject2,_templateObject3;Card.__docgenInfo={description:"",methods:[],displayName:"Card",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},elevation:{required:!1,tsType:{name:"union",raw:"'low' | 'medium' | 'high'",elements:[{name:"literal",value:"'low'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'high'"}]},description:"",defaultValue:{value:"'low'",computed:!1}},padding:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};const Card_stories={title:"UI/Card",component:Card_Card,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{elevation:{control:"select",options:["low","medium","high"],description:"Card shadow elevation"},padding:{control:"boolean",description:"Whether card has padding"},onClick:{action:"clicked"}},decorators:[function(Story){return React.createElement("div",{style:{maxWidth:"400px",width:"100%"}},React.createElement(Story,null))}]};var CardContent=styled_components_browser_esm.Ay.div(Card_stories_templateObject||(Card_stories_templateObject=(0,taggedTemplateLiteral.A)(["\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n"]))),CardTitle=styled_components_browser_esm.Ay.h3(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.A)(["\n  margin: 0;\n"]))),CardText=styled_components_browser_esm.Ay.p(_templateObject3||(_templateObject3=(0,taggedTemplateLiteral.A)(["\n  margin: 0;\n  color: ",";\n"])),(function(_ref){return _ref.theme.colors.gray})),Default={args:{elevation:"low",padding:!0,children:React.createElement(CardContent,null,React.createElement(CardTitle,null,"Card Title"),React.createElement(CardText,null,'This is a simple card component with default styling. It has some text content and uses the "low" elevation shadow.'))}},MediumElevation={args:{elevation:"medium",padding:!0,children:React.createElement(CardContent,null,React.createElement(CardTitle,null,"Medium Elevation"),React.createElement(CardText,null,"This card has a medium elevation shadow, giving it a more pronounced appearance than the low elevation card."))}},HighElevation={args:{elevation:"high",padding:!0,children:React.createElement(CardContent,null,React.createElement(CardTitle,null,"High Elevation"),React.createElement(CardText,null,"This card has a high elevation shadow, making it stand out the most. Use this for important content or dialogs."))}},NoPadding={args:{elevation:"low",padding:!1,children:React.createElement("div",null,React.createElement("img",{src:"https://via.placeholder.com/400x200",alt:"Placeholder",style:{borderRadius:"8px 8px 0 0",width:"100%",display:"block"}}),React.createElement("div",{style:{padding:"1rem"}},React.createElement(CardTitle,null,"Card Without Padding"),React.createElement(CardText,{style:{marginTop:"0.5rem"}},"This card has padding set to false, allowing content like images to extend to the edges. Individual elements can apply their own padding as needed.")))}},Clickable={args:{elevation:"low",padding:!0,onClick:function onClick(){return alert("Card clicked!")},children:React.createElement(CardContent,null,React.createElement(CardTitle,null,"Clickable Card"),React.createElement(CardText,null,"This card has an onClick handler, making it clickable. The cursor will change to a pointer when hovering over the card, and the shadow will increase slightly to indicate it's interactive."))}};const __namedExportsOrder=["Default","MediumElevation","HighElevation","NoPadding","Clickable"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    elevation: 'low',\n    padding: true,\n    children: <CardContent>\n        <CardTitle>Card Title</CardTitle>\n        <CardText>\n          This is a simple card component with default styling. It has some text content and uses\n          the \"low\" elevation shadow.\n        </CardText>\n      </CardContent>\n  }\n}",...Default.parameters?.docs?.source}}},MediumElevation.parameters={...MediumElevation.parameters,docs:{...MediumElevation.parameters?.docs,source:{originalSource:"{\n  args: {\n    elevation: 'medium',\n    padding: true,\n    children: <CardContent>\n        <CardTitle>Medium Elevation</CardTitle>\n        <CardText>\n          This card has a medium elevation shadow, giving it a more pronounced appearance than the\n          low elevation card.\n        </CardText>\n      </CardContent>\n  }\n}",...MediumElevation.parameters?.docs?.source}}},HighElevation.parameters={...HighElevation.parameters,docs:{...HighElevation.parameters?.docs,source:{originalSource:"{\n  args: {\n    elevation: 'high',\n    padding: true,\n    children: <CardContent>\n        <CardTitle>High Elevation</CardTitle>\n        <CardText>\n          This card has a high elevation shadow, making it stand out the most. Use this for\n          important content or dialogs.\n        </CardText>\n      </CardContent>\n  }\n}",...HighElevation.parameters?.docs?.source}}},NoPadding.parameters={...NoPadding.parameters,docs:{...NoPadding.parameters?.docs,source:{originalSource:"{\n  args: {\n    elevation: 'low',\n    padding: false,\n    children: <div>\n        <img src=\"https://via.placeholder.com/400x200\" alt=\"Placeholder\" style={{\n        borderRadius: '8px 8px 0 0',\n        width: '100%',\n        display: 'block'\n      }} />\n        <div style={{\n        padding: '1rem'\n      }}>\n          <CardTitle>Card Without Padding</CardTitle>\n          <CardText style={{\n          marginTop: '0.5rem'\n        }}>\n            This card has padding set to false, allowing content like images to extend to the edges.\n            Individual elements can apply their own padding as needed.\n          </CardText>\n        </div>\n      </div>\n  }\n}",...NoPadding.parameters?.docs?.source}}},Clickable.parameters={...Clickable.parameters,docs:{...Clickable.parameters?.docs,source:{originalSource:"{\n  args: {\n    elevation: 'low',\n    padding: true,\n    onClick: () => alert('Card clicked!'),\n    children: <CardContent>\n        <CardTitle>Clickable Card</CardTitle>\n        <CardText>\n          This card has an onClick handler, making it clickable. The cursor will change to a pointer\n          when hovering over the card, and the shadow will increase slightly to indicate it's\n          interactive.\n        </CardText>\n      </CardContent>\n  }\n}",...Clickable.parameters?.docs?.source}}}}}]);